
@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<h2>Edit Schedule</h2>

@if (TempData.ContainsKey("ErrorMessage"))
{
    <div class="alert alert-danger">
        <div class="d-flex justify-content-start">
            <span class="alert-icon m-r-20 font-size-30">
                <i class="anticon anticon-close-circle"></i>
            </span>
            <div>
                <h5 class="alert-heading">Thêm thất bại</h5>
                <p>@TempData["ErrorMessage"].</p>
            </div>
        </div>
    </div>
}



@using (Html.BeginForm("Edit", "Schedule", FormMethod.Post,
            HtmlHelper.AnonymousObjectToHtmlAttributes(new { enctype = "multipart/form-data" })))
{


    <div class="form-group">
        <label for="input readonlyState">ID Tòa nhà</label>
        <select disabled name="BuildingID" id="input readonlyState" class="form-control">
            <option  selected value="0">@Model.BuildingID</option>
        </select>
    </div>

    <div class="form-row">
        <div class="form-group col-md-4">
            <label for="input readonlyCity">Tên tòa nhà</label>
            <input readonly placeholder="ex: Time city." 
                   name="Name" type="text" class="form-control" id="input readonlyCity"
                   value="@Model.Building.Name"
                   >
        </div>
        <div class="form-group col-md-2">
            <label for="input readonlyZip">Năm xây dựng</label>
            <input  readonly placeholder="ex: 2012." name="YearBuild" type="number" class="form-control" id="year" 
                    value="@Model.Building.YearBuild"
                   >
        </div>
        <div class="form-group col-md-2">
            <label for="input readonlyZip">Số Tầng</label>
            <input readonly name="NumFloors"
                    value="@Model.Building.NumFloors"
                   placeholder="ex: 2." type="number" class="form-control" id="input readonlyZip">
        </div>
        <div class="form-group col-md-2">
            <label for="input readonlyZip">Số phòng ngủ</label>
            <input 
                    value="@Model.Building.Bed"
                   readonly name="Bed" placeholder="ex: 2." type="number" class="form-control" id="input readonlyZip">
        </div>
        <div class="form-group col-md-2">
            <label for="input readonlyZip">Số nhà vệ sinh</label>
            <input
                   value="@Model.Building.Bath"
                   readonly name="Bath" placeholder="ex: 2." type="number" class="form-control" id="input readonlyZip">
        </div>
    </div>
    <div class="form-group">
        <label for="EmployeeBlock">ID Khách hàng</label>
        <select disabled name="BuildingID" id="input readonlyState" class="form-control">
            <option selected value="0">@Model.CustomerID</option>
        </select>
    </div>
    <div class="form-group">
        <label class="font-weight-semibold" for="productName">Tên người dùng</label>
        <input type="text"
               readonly
               class="form-control"
               name="Name"
               id="productName"
               placeholder="Tên khách hàng"
               value="@Model.Customer.Name" />
    </div>
    <div class="form-group">
        <label class="font-weight-semibold" for="productPhone">Số điện thoại</label>
        <input type="text"
               readonly
               class="form-control"
               id="productPhone"
               placeholder="Số điện thoại"
               value="@Model.Customer.Phone"
               name="Phone" />
    </div>
    <div class="form-group">
        <label for="Time">Chọn buổi</label>
        <select name="Time" id="Time" class="form-control" onchange="updateInputValue()">
            @if (Model.Session == true)
            {

                <option selected value="true">Sáng</option>
                <option  value="false">Chiều</option>
            }
            else
            {
                <option value="true">Sáng</option>
                <option selected value="false">Chiều</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label class="font-weight-semibold" for="datepicker">Chọn ngày</label>
        <input name="DateAppointment" type="date" id="datepicker" class="form-control datepicker" 
               value="@Model.Time.ToString("yyyy-MM-dd")"
               />
    </div>

    <div class="form-group row">
        <div class="col-sm-10">
            <button type="submit" class="btn btn-primary">Sửa dữ liệu</button>
        </div>
    </div>
}

<script>
    //document.querySelectorAll("label").forEach(function (label) {
    //    label.addEventListener("click", function (event) {
    //        event.preventDefault();
    //        // Your code here
    //    });
    //});

    //// get references to the select and input elements
    //var selectElement = document.getElementById("input readonlyState");
    //var nameInput = document.getElementById("input readonlyCity");
    //var yearInput = document.getElementById("year");
    //var floorsInput = document.getElementsByName("NumFloors")[0];
    //var bedInput = document.getElementsByName("Bed")[0];
    //var bathInput = document.getElementsByName("Bath")[0];

    //// add an event listener to the select element
    //selectElement.addEventListener("change", function () {
    //    // get the selected option
    //    var selectedOption = selectElement.options[selectElement.selectedIndex];

    //    // update the value of the name input element
    //    nameInput.value = selectedOption.dataset.buildingName;

    //    // update the value of the year input element
    //    yearInput.value = selectedOption.dataset.buildingYear;

    //    // update the value of the floors input element
    //    floorsInput.value = selectedOption.dataset.buildingFloors;

    //    // update the value of the bed input element
    //    bedInput.value = selectedOption.dataset.buildingBed;

    //    // update the value of the bath input element
    //    bathInput.value = selectedOption.dataset.buildingBath;
    //});


    //function updateInputValue() {
    //    var selectElement = document.getElementById("EmployeeBlock");
    //    var selectedOption = selectElement.options[selectElement.selectedIndex];
    //    let phone = selectedOption.getAttribute("data-employee-phone");
    //    let name = selectedOption.getAttribute("data-employee-name");
    //    console.log(name)
    //    document.getElementById("productName").value = name;
    //    document.getElementById("productPhone").value = phone;
    //}
    $(function () {
        // Initialize the date picker component
        $('.datepicker').datepicker();
    });
</script>
